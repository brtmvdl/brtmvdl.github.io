import * as COMPONENTS from '../../../assets/js/components/inputs.component.js'
import { InputComponent } from '../../../assets/js/components/input.component.js'

export class InputsComponent extends COMPONENTS.InputsComponent {
  children = {
    APIKey: new InputComponent({ label: 'APIKey' }),
    Amount: new InputComponent({ label: 'Amount' }),
    Code: new InputComponent({ label: 'Code' }),
    Depth: new InputComponent({ label: 'Depth' }),
    FromDate: new InputComponent({ label: 'FromDate', type: 'datetime' }),
    IncludeLastCount: new InputComponent({ label: 'IncludeLastCount' }),
    Interval: new InputComponent({ label: 'Interval' }),
    Limit: new InputComponent({ label: 'Limit' }),
    LimitPrice: new InputComponent({ label: 'LimitPrice', type: 'number' }),
    MakerTaker: new InputComponent({ label: 'MakerTaker' }),
    Nonce: new InputComponent({ label: 'Nonce' }),
    OrderIdOCO: new InputComponent({ label: 'OrderIdOCO' }),
    OrderType: new InputComponent({ label: 'OrderType' }),
    PegPriceType: new InputComponent({ label: 'PegPriceType' }),
    Side: new InputComponent({ label: 'Side' }),
    Signature: new InputComponent({ label: 'Signature' }),
    StartIndex: new InputComponent({ label: 'StartIndex', type: 'number' }),
    TimeInForce: new InputComponent({ label: 'TimeInForce' }),
    ToDate: new InputComponent({ label: 'ToDate', type: 'datetime' }),
    UseDisplayQuantity: new InputComponent({ label: 'UseDisplayQuantity' }),
    depth: new InputComponent({ label: 'depth', type: 'number' }),
    startIndex: new InputComponent({ label: 'startIndex', type: 'number' }),
    endTimeStamp: new InputComponent({ label: 'endTimeStamp', type: 'datetime' }),
    startTimeStamp: new InputComponent({ label: 'startTimeStamp', type: 'datetime' }),
    AccountId: new InputComponent({ label: 'AccountId', type: 'number' }),
    ClOrderId: new InputComponent({ label: 'ClOrderId', type: 'number' }),
    ClientOrderId: new InputComponent({ label: 'ClientOrderId', type: 'number' }),
    Count: new InputComponent({ label: 'Count', type: 'number' }),
    InstrumentId: new InputComponent({ label: 'InstrumentId', type: 'number' }),
    IntrumentId: new InputComponent({ label: 'IntrumentId', type: 'number' }),
    MarketId: new InputComponent({ label: 'MarketId', type: 'number' }),
    OMSId: new InputComponent({ label: 'OMSId', type: 'number' }),
    OrderId: new InputComponent({ label: 'OrderId', type: 'number' }),
    ProductId: new InputComponent({ label: 'ProductId', type: 'number' }),
    Quantity: new InputComponent({ label: 'Quantity', type: 'number' }),
    UserId: new InputComponent({ label: 'UserId', type: 'number' }),
    accountId: new InputComponent({ label: 'accountId', type: 'number' }),
    executionId: new InputComponent({ label: 'executionId', type: 'number' }),
    instrumentId: new InputComponent({ label: 'instrumentId', type: 'number' }),
    omsId: new InputComponent({ label: 'omsId', type: 'number' }),
    orderId: new InputComponent({ label: 'orderId', type: 'number' }),
    tradeId: new InputComponent({ label: 'tradeId', type: 'number' }),
    userId: new InputComponent({ label: 'userId', type: 'number' }),

  }
}
