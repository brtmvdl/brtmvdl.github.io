// 

export const getMethodsList = () => Array.from([
  'Binance WebSocket API',
  '[guest]',
  ...getInBrowserMethodsList(),
  '[websocket]',
  ...getWebSocketMethodsList(),
])

export const getInBrowserMethodsList = () => Array.from([
  'ping',
  'time',
  'exchangeInfo',
  'depth',
  'trades.recent',
  'trades.historical',
  'trades.aggregate',
  'klines',
  'uiKlines',
  'avgPrice',
  'ticker.24hr',
  'ticker.tradingDay',
  'ticker',
  'ticker.price',
  'ticker.book',
])

export const getWebSocketMethodsList = () => Array.from([
  'session.status',
  'session.logon',
  'session.logout',
  'order.test',
  'order.place',
  'order.status',
  'order.cancel',
  'order.cancelReplace',
  'openOrders.status',
  'openOrders.cancelAll',
  'orderList.status',
  'orderList.place',
  'orderList.cancel',
  'openOrderLists.status',
  'sor.order.place',
  'sor.order.test',
  'account.status',
  'account.commission',
  'account.rateLimits.orders',
  'allOrders',
  'allOrderLists',
  'myTrades',
  'myPreventedMatches',
  'myAllocations',
  'userDataStream.start',
  'userDataStream.ping',
  'userDataStream.stop',
])

export const getParamsList = () => ({
  'ping': [],
  'time': [],
  'exchangeInfo': ['symbol'],
  'depth': ['symbol', 'limit'],
  'trades.recent': ['symbol', 'limit'],
  'trades.historical': ['symbol', 'fromId', 'limit'],
  'trades.aggregate': ['symbol', 'fromId', 'limit'],
  'klines': ['symbol', 'interval', 'startTime', 'limit'],
  'uiKlines': ['symbol', 'interval', 'startTime', 'limit'],
  'avgPrice': ['symbol'],
  'ticker.24hr': ['symbol'],
  'ticker.tradingDay': ['symbol'],
  'ticker': ['symbol', 'windowSize'],
  'ticker.price': ['symbol'],
  'ticker.book': ['symbol'],
  'session.logon': ['signature', 'timestamp'],
  'session.status': [],
  'session.logout': [],
  'order.test': ['symbol', 'side', 'type', 'timeInForce', 'price', 'quantity', 'signature', 'timestamp',],
  'order.place': ['symbol', 'side', 'type', 'price', 'quantity', 'timeInForce', 'timestamp', 'signature'],
  'order.status': ['symbol', 'orderId', 'signature', 'timestamp',],
  'order.cancel': ['symbol', 'origClientOrderId', 'signature', 'timestamp',],
  'order.cancelReplace': ['symbol', 'cancelReplaceMode', 'cancelOrigClientOrderId', 'side', 'type', 'timeInForce', 'price', 'quantity', 'signature', 'timestamp'],
  'openOrders.status': ['symbol', 'signature', 'timestamp'],
  'openOrders.cancelAll': ['symbol', 'signature', 'timestamp'],
  'orderList.place': ['symbol', 'side', 'price', 'quantity', 'stopPrice', 'stopLimitPrice', 'stopLimitTimeInForce', 'newOrderRespType', 'signature', 'timestamp'],
  'orderList.status': ['origClientOrderId', 'signature', 'timestamp'],
  'orderList.cancel': ['symbol', 'orderListId', 'signature', 'timestamp'],
  'openOrderLists.status': ['signature', 'timestamp'],
  'sor.order.place': ['symbol', 'side', 'type', 'quantity', 'timeInForce', 'price', 'timestamp', 'signature',],
  'sor.order.test': ['symbol', 'side', 'type', 'quantity', 'timeInForce', 'price', 'timestamp', 'signature',],
  'account.status': ['signature', 'timestamp',],
  'account.commission': [],
  'account.rateLimits.orders': ['signature', 'timestamp'],
  'allOrders': ['symbol', 'startTime', 'endTime', 'limit', 'signature', 'timestamp'],
  'allOrderLists': ['startTime', 'endTime', 'limit', 'signature', 'timestamp'],
  'myTrades': ['symbol', 'startTime', 'endTime', 'signature', 'timestamp'],
  'myPreventedMatches': ['symbol', 'orderId', 'signature', 'timestamp'],
  'myAllocations': ['symbol', 'orderId', 'signature', 'timestamp'],
})
